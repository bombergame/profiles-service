// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package authgrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProfileID struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileID) Reset()         { *m = ProfileID{} }
func (m *ProfileID) String() string { return proto.CompactTextString(m) }
func (*ProfileID) ProtoMessage()    {}
func (*ProfileID) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *ProfileID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileID.Unmarshal(m, b)
}
func (m *ProfileID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileID.Marshal(b, m, deterministic)
}
func (m *ProfileID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileID.Merge(m, src)
}
func (m *ProfileID) XXX_Size() int {
	return xxx_messageInfo_ProfileID.Size(m)
}
func (m *ProfileID) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileID.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileID proto.InternalMessageInfo

func (m *ProfileID) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ProfileID)(nil), "authgrpc.ProfileID")
	proto.RegisterType((*Void)(nil), "authgrpc.Void")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x2c, 0x2d, 0xc9, 0x48,
	0x2f, 0x2a, 0x48, 0x56, 0x52, 0xe4, 0xe2, 0x0c, 0x28, 0xca, 0x4f, 0xcb, 0xcc, 0x49, 0xf5, 0x74,
	0x11, 0x12, 0xe1, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e,
	0x82, 0x70, 0x94, 0xd8, 0xb8, 0x58, 0xc2, 0xf2, 0x33, 0x53, 0x8c, 0x3c, 0xb9, 0xb8, 0x1d, 0x4b,
	0x4b, 0x32, 0x82, 0x21, 0x26, 0x09, 0x59, 0x71, 0x09, 0xba, 0xa4, 0xe6, 0xa4, 0x96, 0xa4, 0x3a,
	0xe6, 0xe4, 0x04, 0xa7, 0x16, 0x17, 0x67, 0xe6, 0xe7, 0x15, 0x0b, 0x09, 0xeb, 0xc1, 0x4c, 0xd6,
	0x83, 0x1b, 0x2b, 0xc5, 0x87, 0x10, 0x04, 0x19, 0xa4, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0x86, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x1e, 0x6d, 0xf4, 0x97, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	DeleteAllSessions(ctx context.Context, in *ProfileID, opts ...grpc.CallOption) (*Void, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) DeleteAllSessions(ctx context.Context, in *ProfileID, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/authgrpc.AuthService/DeleteAllSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	DeleteAllSessions(context.Context, *ProfileID) (*Void, error)
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_DeleteAllSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).DeleteAllSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authgrpc.AuthService/DeleteAllSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).DeleteAllSessions(ctx, req.(*ProfileID))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authgrpc.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteAllSessions",
			Handler:    _AuthService_DeleteAllSessions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
